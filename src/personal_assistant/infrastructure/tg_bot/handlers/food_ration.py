from calendar import Day

from aiogram import F, Router
from aiogram.types import Message

from personal_assistant.infrastructure.tg_bot.keyboards.main_menu import (
    TODAY_FOOD_RATION_MESSAGE_TEXT,
)
from personal_assistant.modules.food_ration.application.use_cases import (
    GetFoodRationForTodayUseCase,
    TodayFoodRationResultDto,
)

food_ration_router = Router(name="food_ration")

WEEK_DAY_RU_MAPPING = {
    Day.MONDAY: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    Day.TUESDAY: "–í—Ç–æ—Ä–Ω–∏–∫",
    Day.WEDNESDAY: "–°—Ä–µ–¥–∞",
    Day.THURSDAY: "–ß–µ—Ç–≤–µ—Ä–≥",
    Day.FRIDAY: "–ü—è—Ç–Ω–∏—Ü–∞",
    Day.SATURDAY: "–°—É–±–±–æ—Ç–∞",
    Day.SUNDAY: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
}


def format_today_food_ration_result_dto_to_str(
    today_food_ration_result_dto: TodayFoodRationResultDto,
) -> str:
    week_day_ru = WEEK_DAY_RU_MAPPING.get(
        today_food_ration_result_dto.week_day,
        today_food_ration_result_dto.week_day.name,
    )
    # TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    return f"<b>{week_day_ru}</b>\n=======================\n- ..."


@food_ration_router.message(F.text == TODAY_FOOD_RATION_MESSAGE_TEXT)
async def today_food_ration_handler(message: Message) -> None:
    use_case = GetFoodRationForTodayUseCase()  # TODO: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

    today_food_ration_result_dto = use_case.execute()

    if today_food_ration_result_dto is None:
        await message.answer("–†–∞—Ü–∏–æ–Ω –Ω–∞ –¥–µ–Ω—å –µ—â—ë –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω üôà")
    else:
        formated_today_food_ration = format_today_food_ration_result_dto_to_str(
            today_food_ration_result_dto=today_food_ration_result_dto
        )
        await message.answer(formated_today_food_ration)
